version: "3"

services:
  django:
    build: .
    container_name: class_room_backend
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/class_room_backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - celery
      - celery-beat
  celery:
    build: .
    command: celery -A class_room_backend worker -l INFO
    volumes:
      - .:/class_room_backend
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - rabbit
  celery-beat:
    build: .
    command: celery -A class_room_backend beat -l INFO
    volumes:
      - .:/class_room_backend
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - rabbit
      - celery

  rabbit:
    image: rabbitmq:latest
  #  celeryworker:
  #    build: .
  #    command: celery -A crypto_backend worker -l INFO
  #    volumes:
  #      - .:/usr/src/app
  #    depends_on:
  #      - django
  #      - redis
  #      - celery

  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data/
  redis:
    image: "redis:alpine"

volumes:
  pgdata: